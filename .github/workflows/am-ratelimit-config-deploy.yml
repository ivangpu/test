name: Set AM Ratelimit config

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Select the environment to deploy"
        required: true
        default: "DES-INTRANET"
        type: choice
        options:
          - DES-IAM
          - DES-INTRANET

env:
  DESTINATION_PATH: "/path/to/destination"
  ZIP_FILE_NAME: amRatelimitConfig.zip
  PROJECT_PATH: gitProject
  SCRIPT_PATH: /path/remote/script.sh
  AUTHORIZED_USERS: |
    ivangpu

jobs:
  check-authorization:
    name: Check Authorization
    runs-on: ubuntu-latest

    steps:
      - name: Check if user is authorized
        run: |
          current_user="${{ github.actor }}"
          authorized_users="${{ env.AUTHORIZED_USERS }}"
          if ! echo "$authorized_users" | grep -qw "$current_user"; then
            echo "User $current_user is not authorized to run this workflow."
            exit 1
          fi
        shell: bash

  deployment:
    name: Deploy config
    runs-on: ubuntu-latest
    needs: check-authorization
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checking deployment environment variables
        run: |
          echo "Host: ${{ vars.SSH_HOST }}"
          echo "Ssh User: ${{ vars.SSH_USER }}"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: ${{ env.PROJECT_PATH }}
          lfs: true

      - name: Zip the content of the environment folder
        run: |
          cd ${{ env.PROJECT_PATH }}/amratelimit/${{ github.event.inputs.environment }}
          zip -r ../../../${{ env.ZIP_FILE_NAME }} .
      - name: Setup SSH file
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
      - name: Copy zip file to remote server
        run: |
          rsync -avz --dry-run ${{ env.ZIP_FILE_NAME }} ${{ vars.SSH_USER }}@${{ vars.SSH_HOST }}:${{ env.DESTINATION_PATH }}
      - name: Execute deployment script on the remote server
        run: |
          ssh ${{ vars.SSH_USER }}@${{ secrets.SSH_HOST }} 'bash -s < ${{ env.SCRIPT_PATH }} ${{ env.DESTINATION_PATH }}/${{ env.ZIP_FILE_NAME }}'
